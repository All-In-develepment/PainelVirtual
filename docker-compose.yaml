services:
  api-backend:
    container_name: 'api-backend'
    build: ./api
    command: >
      gunicorn -b 0.0.0.0:8000
      --access-logfile -
      --reload
      "painel.app:create_app()"
    env_file:
      - api/.env
    volumes:
      - .:/app
    ports:
      - '8000:8000'

  redis:
    container_name: 'redis'
    image: redis:7.4-alpine
    command: redis-server --requirepass devpassword
    volumes:
      - redis:/var/lib/redis/data
    ports:
      - '6379:6379'

  celery:
    container_name: 'celery'
    build: ./api
    command: celery -A painel.blueprints.contact.tasks worker
    # command: celery -A painel.blueprints.contact.tasks worker -l info
    env_file:
      - api/.env
    volumes:
      - .:/app
  
  postgres:
    container_name: 'postgres'
    image: 'postgres:16'
    env_file:
      - 'api/.env'
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    ports:
      - '5432:5432'
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  redis:
  postgres:
  pgadmin_data: